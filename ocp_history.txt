    1  exit
    2  sudo yum -yinstall gnome-tweaks 
    3  sudo yum -y install gnome-tweaks 
    4  gnome-tweaks
    5  vim token
    6  cat token 
    7  git clone https://github.com/sanjurajrh/DO180-apps.git
    8  ls
    9  cd DO180-apps/
   10  ls
   11  git checkout -b exercise 
   12  echo "testing git" > myfile.txt
   13  git add myfile.txt 
   14  git commit -m "Added the testing file"
   15  git push 
   16  git push --set-upstream origin exercise
   17  echo "ocp4 test" > ocp.txt 
   18  git add ocp.txt 
   19  git commit -m "Another sample file"
   20  git push 
   21  cat ~/.gitconfig 
   22  lab-configure 
   23  cat /usr/local/etc/ocp4.config
   24  echo ${RHT_OCP4_DEV_USER}
   25  source /usr/local/etc/ocp4.config 
   26  echo ${RHT_OCP4_DEV_USER}
   27  cat ~/gitconfig
   28  cat ~/.gitconfig
   29  # git config --global credential.hepler cache --timeout=604800
   30  top 
   31  cd
   32  rpm -qa httpd
   33  sudo yum install httpd 
   34  rpm -qa httpd
   35  sudo systemctl start httpd
   36  sudo systemctl enable httpd
   37  sudo systemctl status httpd
   38  ls -l /etc/security/limits.conf 
   39  man ulimit 
   40  whatis ulimit
   41  ls -l /etc/security/limits.conf 
   42  vim /etc/security/limits.conf
   43  sudo systemctl status httpd
   44  man -k system 
   45  man -k systemd
   46  sudo -i 
   47  oc login -u cwtmco -p ec34dce1eac14d7b93f8 https://api.ap46a.prod.ole.redhat.com:6443
   48  oc new-project cwtmco-project1
   49  oc new-app --docker-image=quay.io/redhattraining/versioned-hello:v1.0 ---name=helloapp
   50  oc new-app --docker-image=quay.io/redhattraining/versioned-hello:v1.0 --name helloapp
   51  oc get pods 
   52  oc get pods -o wide 
   53  oc get svc 
   54  oc describe svc helloapp
   55  oc get deployment
   56  oc delete pod/helloapp-8477fc8869-qpvwj
   57  oc get pods -l  deployment=helloapp
   58  oc get pods -l  deployment=helloapp -o wide 
   59  oc describe svc helloapp 
   60  history 
   61  oc get pods 
   62  oc get pods - wide 
   63  oc get pods -o wide 
   64  # Probe -- Liveness, Readiness, Startup 
   65  oc debug nodes/ip-10-0-193-166.ap-southeast-1.compute.internal 
   66  oc get pods 
   67  oc get svc 
   68  oc get deployment 
   69  oc exec -it helloapp-8477fc8869-rg4db -- curl localhost:8080
   70  oc scale deployment/helloapp --replicas=2
   71  oc get deployment
   72  oc get pods 
   73  oc get pods -o wide 
   74  oc describe svc helloapp 
   75  oc get pods 
   76  oc exec -it helloapp-8477fc8869-hrd2t -- env 
   77  wget https://k8s.io/examples/admin/dns/dnsutils.yaml
   78  vim dnsutils.yaml 
   79  cat dnsutils.yaml 
   80  oc create -f dnsutils.yaml 
   81  oc get pods 
   82  oc get dns 
   83  oc get pods
   84  oc exec -it dnsutils /bin/bash
   85  # flat 
   86  #  network policies 
   87  oc get projects
   88  oc get route -n openshift-console 
   89  oc get deployment
   90  oc scale --replicas=1 deployment/helloapp
   91  oc get deployment
   92  oc get pods -o wide 
   93  oc delete -f dnsutils.yaml 
   94  oc get pods 
   95  oc get hpa
   96  oc autoscale 
   97  oc autoscale -h 
   98  oc get pods 
   99  oc get deployment
  100  oc autoscale deployment/helloapp --min=2 --max=10 --cpu-percent=75 
  101  oc get hpa
  102  oc get pods 
  103  oc get pods -w
  104  oc get pods 
  105  oc get deployment
  106  oc get pods 
  107  vim mypod.yaml
  108  cat mypod.yaml
  109  oc create -f mypod.yaml
  110  oc get pods 
  111  oc get pods -w
  112  oc get pods 
  113  oc logs mypod 
  114  oc logs mypod mycontainer1
  115  oc logs mypod mycontainer2
  116  oc delete -f mypod.yaml 
  117  oc get all
  118  oc delete hpa/helloapp
  119  oc get all -l app=helloapp
  120  oc delete all -l app=helloapp
  121  oc get all 
  122  oc new-app --docker-image=quay.io/redhattraining/versioned-hello:v1.0 --name helloapp --as-deployment-config=true 
  123  oc get all
  124  oc delete all -l app=helloapp
  125  oc get all
  126  # special features -- custom strategy -- deploymentconfig 
  127  # special features -- routing the traffic of the requests -- deploymentconfig 
  128  oc get all
  129  oc new-app --name=dockerapp --docker-image=quay.io/redhattraining/versioned-hello:v1.1
  130  oc get pods 
  131  oc exec -it dockerapp-5c8dc6bc6c-xt786 env | grep -i key1 
  132  oc exec -it dockerapp-5c8dc6bc6c-xt786 -- env | grep -i key1 
  133  oc get secret 
  134  oc create secret generic mysecret --from-literal=KEY1=value1 
  135  oc get secret 
  136  oc get secret/mysecret  -o yaml 
  137  echo "dmFsdWUx" | base64 --decode 
  138  oc create secret -h 
  139  # vault 
  140  oc get secret/mysecret 
  141  oc get cm 
  142  oc get configmap
  143  oc create configmap -h 
  144  oc create configmap some-config --from-literal=MESSAGE=hello
  145  oc get cm 
  146  oc get cm/some-config -o yaml 
  147  oc get sunil
  148  oc get is -n openshift | grep jenkis
  149  oc get is -n openshift | grep jenkins
  150  oc get is -n openshift | grep tekton
  151  oc get template -n openshift | grep -i tekton 
  152  oc get pods -n openshift-monitoring 
  153  oc get all
  154  oc get route 
  155  oc expose svc/dockerapp
  156  oc get route 
  157  curl dockerapp-cwtmco-project1.apps.ap46a.prod.ole.redhat.com
  158  cat /usr/local/etc/ocp4.config 
  159  oc delete route dockerapp
  160  oc expose svc/dockerapp --hostname=ibm.apps.ap46a.prod.ole.redhat.com
  161  oc get route 
  162  # *.apps.ap46a.prod.ole.redhat.com  -- IN A 
  163  dig ibm.apps.ap46a.prod.ole.redhat.com
  164  dig sunil.apps.ap46a.prod.ole.redhat.com
  165  oc get project
  166  oc get pods -n cwtmco-project2
  167  rpm -qa podman 
  168  yum list podman
  169  podman version 
  170  podman search mysql
  171  ls -l /etc/containers/registries.*
  172  sudo vim /etc/containers/registries.conf
  173  grep -v ^# /etc/containers/registries.conf
  174  podman search quay.io/mysql
  175  podman images 
  176  podman ps 
  177  podman search registry.redhat.io/mysql 
  178  podman pull registry.redhat.io/rhel8/mysql-80
  179  podman login registry.redhat.io 
  180  cat /run/user/1000/containers/auth.json 
  181  podman pull registry.redhat.io/rhel8/mysql-80
  182  podman images
  183  podman pull docker.io/nginx 
  184  podman images 
  185  podman pull docker.io/nginx:1.20 
  186  podman images 
  187  podman run --name myweb docker.io/library/nginx:1.20 
  188  podman ps 
  189  podman ps -a
  190  podman start myweb 
  191  podman ps 
  192  podman stop yweb
  193  podman stop myweb
  194  podman rm myweb
  195  podman ps -a
  196  podman images 
  197  podman rmi docker.io/library/nginx:1.20 
  198  podman images 
  199  podman run --name myweb -p 8080:80 -d docker.io/nginx 
  200  podman ps 
  201  curl localhost:8080
  202  podman images
  203  podman run registry.redhat.io/rhel8/mysql-80
  204  podman ps 
  205  podman ps -a
  206  podman rm sad_wu
  207  # podman run --name mysql-pod -e MYSQL_USER=user1 -e MYSQL_PASSWORD=mypa55 -e MYSQL_DATABASE=testdb -e MYSQL_ROOT_PASSWORD=r00tpa55 -d registry.redhat.io/rhel8/mysql-80
  208  podman images 
  209  podman inspect 18ec09a1f061
  210  podman run --name mysql-pod -e MYSQL_USER=user1 -e MYSQL_PASSWORD=mypa55 -e MYSQL_DATABASE=testdb -e MYSQL_ROOT_PASSWORD=r00tpa55 -d registry.redhat.io/rhel8/mysql-80
  211  podman ps 
  212  podman images 
  213  podman inspect 12766a6745ee
  214  podman inspect 12766a6745ee | grep -i usage 
  215  skopeo inspect docker://docker.io/nginx
  216  history 
  217  skopeo inspect docker://registry.redhat.io/rhel8/mysql-80
  218  podman ps 
  219  podman exec -it mysql-pod /bin/bash
  220  man podman-ps
  221  history > history.txt
